import {
  Button, Divider, Hidden, Input,
  InputAdornment,
  Typography
} from "@material-ui/core";
import Avatar from "@material-ui/core/Avatar";
import ClickAwayListener from "@material-ui/core/ClickAwayListener";
import CssBaseline from "@material-ui/core/CssBaseline";
import Grow from "@material-ui/core/Grow";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemAvatar from "@material-ui/core/ListItemAvatar";
import ListItemText from "@material-ui/core/ListItemText";
import MenuItem from "@material-ui/core/MenuItem";
import MenuList from "@material-ui/core/MenuList";
import Paper from "@material-ui/core/Paper";
import Popper from "@material-ui/core/Popper";
import { makeStyles } from "@material-ui/core/styles";
import CreateIcon from "@material-ui/icons/Create";
import ExpandMoreIcon from "@material-ui/icons/ExpandMore";
import FolderOpenIcon from "@material-ui/icons/FolderOpen";
import MessageIcon from "@material-ui/icons/Message";
import MoreVertIcon from "@material-ui/icons/MoreVert";
import SearchIcon from "@material-ui/icons/Search";
import React, { Fragment } from "react";


const messages = [
  {
    id: 1,
    primary: "Alexis Boggan",
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: "https://i.ibb.co/gJ4TqhV/yo.jpg",
    date: "Hoy",
    tipodecliente: " - ClienteA",
  },
  {
    id: 2,
    primary: "Alejandra Cagnoni",
    secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
    person: "https://i.ibb.co/XbKztS7/alec.jpg",
    date: "Ayer",
    tipodecliente: " - ClienteB",
  },
  {
    id: 3,
    primary: "Agostina Castello",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: "https://i.ibb.co/MpxsZYp/agos.jpg",
    date: "2 de Mayo",
    tipodecliente: " - ClienteC",
  },
  {
    id: 4,
    primary: "Mario Sanches",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "https://randomuser.me/api/portraits/thumb/men/34.jpg",
    date: "19 de Abril",
    tipodecliente: " - ClienteA",
  },
  {
    id: 5,
    primary: "Mario Bros",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "https://randomuser.me/api/portraits/thumb/men/36.jpg",
    date: "19 de Abril",
    tipodecliente: " - ClienteC",
  },
  {
    id: 6,
    primary: "Romina Sarasa",
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
    person: "https://randomuser.me/api/portraits/thumb/men/38.jpg",
    date: "25 de Marzo",
    tipodecliente: " - ClienteA",
  },
  {
    id: 7,
    primary: "Roberto Parrado",
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
    person: "https://randomuser.me/api/portraits/thumb/men/29.jpg",
    date: "25 de Marzo",
    tipodecliente: " - ClienteC",
  },
];

const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    height: "45vh",
    paddingBottom: 15,
  },
  list: {
    marginBottom: theme.spacing(2),
    maxHeight: "100%",
    overflow: "auto",
    scrollbarColor: ` ${theme.palette.primary.main} white`,
  },
  listItem: {
    textOverflow: "elipsis",
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  Menbox: {
    backgroundColor: theme.palette.primary.main,
    padding: 18,
    width: "100%",
    fontSize: 30,
    fontWeight: 600,
    color: "#fff",
  },
  appBar: {
    top: "auto",
    bottom: 0,
  },

  searchInp: {
    padding: 4,
    width: "90%",
    marginTop: 10,
    marginLeft: 20,
    marginBottom: 10,
    borderRadius: 5,
    backgroundColor: "#e4e4e6",
    "& .MuiFilledInput-root:focus": {
      backgroundColor: "#fff",
    },
    cursor: "pointer",
    "&:hover": {
      backgroundColor: "#fff",
    },
  },

  timeStamp: {
    position: "absolute",
    top: 3,
    right: 10,
    fontSize: 11,
    color: "#757070",
  },
  messageName: {
    fontSize: 15,
    fontWeight: "bold",
    "& span": {
      fontSize: 13,
      fontWeight: "normal",
      color: "grey",
    },
  },
  messageText: {
    fontSize: 13,
  },
  root: {
    textAlign: "center",
  },
  buclien: {
    padding: 20,
    marginTop: 20,
    marginBottom: 10,
    fontWeight: 600,
    fontSize: 18,
    fontFamily: "Arial",
  },

  Buscar: {
    alignItems: "center",
    display: "flex",
    flexDirection: "space-between",
  },

  icon: {
    alignItems: "center",
    marginLeft: 5,
    display: "flex",
  },

  addicon: {
    backgroundColor: theme.palette.primary.main,
    textAlign: "center",
    width: 40,
    height: 40,
    borderRadius: 80,
    color: "#fff",
    padding: 5,
  },

  lapiz: {
    with: "100%",
    textAlign: "end",
    position: "absolute",
    right: 35,
    bottom: 200,
  },

  selected: {
    backgroundColor: theme.palette.primary.main,
  },

  Headerbox: {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    maxWidth: 200,
    margin: "0 auto",
  },
  Title: {
    marginLeft: 0,
    marginRight: 0,
  },
  message: {
    display: "flex",
    with: 50,
  },
  active: {
    backgroundColor: "#7fac9c !important",
    color: "white",
    "& span":{
      color: "white"
    }
  },
}));

export default function MessageSideBar() {
  const classes = useStyles();

  const addEllipsis = (text) => {
    let newText = text;
    if (text.length > 60) {
      newText = text.substring(0, 34);
    }
    return newText;
  };

  function handleListKeyDown(event) {
    if (event.key === "Tab") {
      event.preventDefault();
      setOpen(false);
    }
  }

  const handleClose = (event) => {
    if (anchorRef.current && anchorRef.current.contains(event.target)) {
      return;
    }

    setOpen(false);
  };

  function MessageTimeStamp(props) {
    return <div className={classes.timeStamp}>{props.date}</div>;
  }

  const handleToggle = () => {
    setOpen((prevOpen) => !prevOpen);
  };

  const [open, setOpen] = React.useState(false);
  const anchorRef = React.useRef(null);

  return (
    <React.Fragment>
      <div className={classes.Menbox}>
        <div className={classes.Headerbox}>
          <MessageIcon />
          <Typography
            className={classes.Title}
            variant="h5"
            color="inherit"
            icon
          >
            Mensajes
          </Typography>
          <ExpandMoreIcon />
        </div>
      </div>

      <CssBaseline />
      <div className={classes.Buscar}>
        <Input
          id="searchInput"
          placeholder="Buscar"
          fullWidth={true}
          className={classes.searchInp}
          disableUnderline
          endAdornment={
            <InputAdornment>
              <SearchIcon />
            </InputAdornment>
          }
        />
        <div className={classes.icon}>
          <CreateIcon />
          <MoreVertIcon />
        </div>
      </div>
      <Paper square className={classes.paper}>
        <div className={classes.messagesContainer}></div>
        <List className={classes.list}>
          <Divider />
          {messages.map(
            ({ id, primary, secondary, person, date, tipodecliente }) => (
              <React.Fragment key={id}>
                <ListItem
                  button
                  className={classes.listItem}
                  selected={primary === "Alexis Boggan" ? true : false}
                  classes={{ selected: classes.active }}
                >
                  
                  <ListItemAvatar>
                    <Avatar alt="Profile Picture" src={person} />
                  </ListItemAvatar>
                  <ListItemText
                    disableTypography
                    primary={
                      <Fragment className={classes.message}>
                        <Typography className={classes.messageName}>
                          {" "}
                          {primary}
                          <span>{tipodecliente}</span>
                        </Typography>
                      </Fragment>
                    }
                    secondary={
                      <Typography className={classes.messageText}>
                        {" "}
                        {addEllipsis(secondary)}{" "}
                      </Typography>
                    }
                  />
                  <MessageTimeStamp date={date} />
                </ListItem>
                <Divider />
              </React.Fragment>
            )
          )}
        </List>
        <div className={classes.lapiz}>
          <Hidden smUp>
            <CreateIcon className={classes.addicon} fontSize="large" />
          </Hidden>
        </div>
      </Paper>

      <div className={classes.root}>
        <div className={open ? classes.selected : ""}>
          <Hidden xsDown>
            <Button
              ref={anchorRef}
              aria-controls={open ? "menu-list-grow" : undefined}
              aria-haspopup="true"
              onClick={handleToggle}
              className={classes.buclien}
              fullWidth
            >
              <FolderOpenIcon />
              Clientes
            </Button>

            <Popper
              open={open}
              anchorEl={anchorRef.current}
              role={undefined}
              transition
              disablePortal
            >
              {({ TransitionProps, placement }) => (
                <Grow
                  {...TransitionProps}
                  style={{
                    transformOrigin:
                      placement === "bottom" ? "center top" : "center bottom",
                  }}
                >
                  <Paper>
                    <ClickAwayListener onClickAway={handleClose}>
                      <MenuList
                        autoFocusItem={open}
                        id="menu-list-grow"
                        onKeyDown={handleListKeyDown}
                      >
                        <MenuItem onClick={handleClose}>Cliente A</MenuItem>
                        <MenuItem onClick={handleClose}>Cliente B</MenuItem>
                      </MenuList>
                    </ClickAwayListener>
                  </Paper>
                </Grow>
              )}
            </Popper>
          </Hidden>
        </div>
      </div>
    </React.Fragment>
  );
}
